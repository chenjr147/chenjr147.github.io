<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>面试 on Kevin's Blog</title><link>https://blog.chenjr.top/categories/%E9%9D%A2%E8%AF%95/</link><description>Recent content in 面试 on Kevin's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 10 Jun 2021 23:52:42 +0800</lastBuildDate><atom:link href="https://blog.chenjr.top/categories/%E9%9D%A2%E8%AF%95/index.xml" rel="self" type="application/rss+xml"/><item><title>剑指 offer</title><link>https://blog.chenjr.top/post/sword-to-offer/</link><pubDate>Thu, 10 Jun 2021 23:52:42 +0800</pubDate><guid>https://blog.chenjr.top/post/sword-to-offer/</guid><description>剑指 Offer 03. 数组中重复的数字 来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
思路 原地哈希。
代码 1 2 3 4 5 6 7 8 9 10 11 12 13 // Algorithm: hash in-place // Time Complexity: O(n), n = len(nums) // Space Complexity: O(1) func findRepeatNumber(nums []int) int { n := len(nums) for i := range nums { if nums[nums[i]%n] &amp;gt;= n { return nums[i] % n } nums[nums[i]%n] += n } return -1 } 剑指 Offer 04.</description></item></channel></rss>